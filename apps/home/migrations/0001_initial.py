# Generated by Django 5.2.3 on 2025-09-10 04:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Breakpoint_upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('File_uploadBP', models.FileField(blank=True, null=True, upload_to='uploads/breakpoints/')),
            ],
        ),
        migrations.CreateModel(
            name='BreakpointsTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Guidelines', models.CharField(blank=True, choices=[('CLSI', 'CLSI')], default='', max_length=100)),
                ('Test_Method', models.CharField(blank=True, choices=[('DISK', 'DISK'), ('MIC', 'MIC')], default='', max_length=20)),
                ('Potency', models.CharField(blank=True, default='', max_length=5)),
                ('Abx_code', models.CharField(blank=True, default='', max_length=15)),
                ('Tier', models.CharField(blank=True, default='', max_length=10)),
                ('Show', models.BooleanField(default=True)),
                ('Retest', models.BooleanField(default=False)),
                ('Antibiotic', models.CharField(blank=True, default='', max_length=100)),
                ('Whonet_Abx', models.CharField(blank=True, default='', max_length=100)),
                ('Disk_Abx', models.BooleanField(default=False)),
                ('R_val', models.CharField(blank=True, default='', max_length=30)),
                ('I_val', models.CharField(blank=True, default='', max_length=30)),
                ('SDD_val', models.CharField(blank=True, default='', max_length=30)),
                ('S_val', models.CharField(blank=True, default='', max_length=30)),
                ('Alert_val', models.CharField(blank=True, default='', max_length=30)),
                ('Alert_cln', models.CharField(blank=True, default='', max_length=30)),
                ('Date_Modified', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clinic_Pers_Other',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pers_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Pers_License', models.CharField(blank=True, max_length=100, null=True)),
                ('Pers_Designation', models.CharField(blank=True, max_length=150, null=True)),
                ('Pers_Email', models.EmailField(blank=True, max_length=100, null=True, validators=[django.core.validators.EmailValidator()])),
                ('Pers_Contact', models.CharField(blank=True, max_length=27, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clinic_Staff_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ClinStaff_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('ClinStaff_License', models.CharField(blank=True, max_length=100, null=True)),
                ('ClinStaff_Designation', models.CharField(blank=True, max_length=150, null=True)),
                ('ClinStaff_Email', models.EmailField(blank=True, max_length=100, null=True, validators=[django.core.validators.EmailValidator()])),
                ('ClinStaff_Contact', models.CharField(blank=True, max_length=27, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClinicData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTIDCode', models.CharField(blank=True, max_length=2, unique=True)),
                ('ClinicCode', models.CharField(blank=True, max_length=3)),
                ('ClinicName', models.CharField(blank=True, max_length=155)),
            ],
        ),
        migrations.CreateModel(
            name='Egasp_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_of_Entry', models.DateTimeField(auto_now=True)),
                ('ID_Number', models.CharField(blank=True, default='', max_length=100)),
                ('Egasp_Id', models.CharField(blank=True, max_length=25, unique=True)),
                ('PTIDCode', models.CharField(blank=True, max_length=100)),
                ('Laboratory', models.CharField(blank=True, default='Research Institute for Tropical Medicine', max_length=100)),
                ('Clinic', models.CharField(blank=True, max_length=100)),
                ('Consult_Date', models.DateField(blank=True, null=True)),
                ('Consult_Type', models.CharField(choices=[('', ''), ('Initial Visit', 'Initial Visit'), ('Follow Up', 'Follow-up'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Client_Type', models.CharField(choices=[('', ''), ('Referral', 'Referral'), ('Walk-in', 'Walk-in'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Uic_Ptid', models.CharField(blank=True, max_length=100)),
                ('Clinic_Code', models.CharField(blank=True, max_length=100)),
                ('ClinicCodeGen', models.CharField(blank=True, max_length=100)),
                ('First_Name', models.CharField(blank=True, max_length=100)),
                ('Middle_Name', models.CharField(blank=True, max_length=100)),
                ('Last_Name', models.CharField(blank=True, max_length=100)),
                ('Suffix', models.CharField(blank=True, max_length=100)),
                ('Birthdate', models.DateField(blank=True, null=True)),
                ('Age', models.CharField(blank=True, max_length=20)),
                ('Sex', models.CharField(choices=[('', ''), ('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('Gender_Identity', models.CharField(choices=[('', ''), ('Male', 'Male'), ('Female', 'Female'), ('Transgender Male', 'Transgender Male'), ('Transgender Female', 'Transgender Female'), ('Other', 'Other'), ('Unknown', 'Unknown')], default='', max_length=100)),
                ('Gender_Identity_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Occupation', models.CharField(blank=True, max_length=100)),
                ('Civil_Status', models.CharField(choices=[('', ''), ('Single', 'Single'), ('Married', 'Married'), ('Live-in Partner', 'Live-in Partner'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Civil_Status_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Current_Province', models.CharField(default='*None', max_length=100)),
                ('Current_City', models.CharField(default='*None', max_length=100)),
                ('Current_Country', models.CharField(choices=[('Philippines', 'Philippines'), ('Other', 'Other')], default='Philippines', max_length=100)),
                ('PermAdd_same_CurrAdd', models.BooleanField(default=False)),
                ('Permanent_Province', models.CharField(default='*None', max_length=100)),
                ('Permanent_City', models.CharField(default='*None', max_length=100)),
                ('Permanent_Country', models.CharField(choices=[('Philippines', 'Philippines'), ('Other', 'Other')], default='Philippines', max_length=100)),
                ('Other_Country', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Nationality', models.CharField(choices=[('', ''), ('Filipino', 'Filipino'), ('Other', 'Other'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Nationality_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Travel_History', models.CharField(choices=[('', ''), ('Within Country', 'Within the Country'), ('Outside Country', 'Outside the Country'), ('Both', 'Both'), ('No Travel', 'No Travel History')], default='', max_length=100)),
                ('Travel_History_Specify', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Client_Group', models.CharField(choices=[('n/a', 'n/a'), ('MSM', 'MSM'), ('Transgender', 'Transgender'), ('Heterosexual', 'Heterosexual'), ('PWID', 'PWID'), ('PDL', 'PDL'), ('OFW/Partner of OFW', 'OFW/Partner of OFW'), ('Female Partner of MSIM or PWID', 'Female Partner of MSIM or PWID'), ('Registered Sex Worker', 'Registered Sex Worker'), ('Freelance Sex Worker', 'Freelance Sex Worker'), ('General Population', 'General Population')], default='', max_length=100)),
                ('Client_Group_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('History_Of_Sex_Partner', models.CharField(choices=[('', ''), ('with Both sex', 'with Both sex'), ('with Male', 'with Male'), ('with Female', 'with Female'), ('Unknown', 'Unknown')], default='', max_length=100)),
                ('Nationality_Sex_Partner', models.CharField(choices=[('', ''), ('Filipino', 'Filipino'), ('Filipino and', 'Filipino and'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Date_of_Last_Sex', models.DateField(blank=True, null=True)),
                ('Nationality_Sex_Partner_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Number_Of_Sex_Partners', models.CharField(blank=True, max_length=100)),
                ('Relationship_to_Partners', models.CharField(choices=[('n/a', 'n/a'), ('Spouse/live-in partner', 'Spouse/live-in partner'), ('Regular non-spouse', 'Regular non-spouse'), ('Casual', 'Casual')], default='', max_length=100)),
                ('SB_Urethral', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('SB_Vaginal', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('SB_Anal_Insertive', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('SB_Oral_Insertive', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sharing_of_Sex_Toys', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('SB_Oral_Receptive', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('SB_Anal_Receptive', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('SB_Others', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Sti_None', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Hiv', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Hepatitis_B', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Hepatitis_C', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_NGI', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Syphilis', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Chlamydia', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Anogenital_Warts', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Genital_Ulcer', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Herpes', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Sti_Trichomoniasis', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Mycoplasma_genitalium', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Sti_Lymphogranuloma', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Illicit_Drug_Use', models.CharField(choices=[('', ''), ('Drug Use, Current', 'Drug Use, Current'), ('Drug Use, past 30 days', 'Drug Use, >past(30 days)'), ('No Drug Use', 'No Drug Use'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Illicit_Drug_Specify', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Abx_Use_Prescribed', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Abx_Use_Prescribed_Specify', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Abx_Use_Self_Medicated', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Abx_Use_Self_Medicated_Specify', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Abx_Use_None', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Abx_Use_Other', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Abx_Use_Other_Specify', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Route_Oral', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Route_Injectable_IV', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Route_Dermal', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Route_Suppository', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Route_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Symp_With_Discharge', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='', max_length=100)),
                ('Symp_No', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Discharge_Urethra', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Discharge_Vagina', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Discharge_Anus', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Discharge_Oropharyngeal', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Pain_Lower_Abdomen', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Tender_Testicles', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Painful_Urination', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Painful_Intercourse', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Rectal_Pain', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Symp_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Outcome_Of_Follow_Up_Visit', models.CharField(choices=[('', ''), ('Returned to Clinic with Symptoms', 'Returned to Clinic with Symptoms'), ('Returned to Clinic without Symptoms', 'Returned to Clinic without Symptoms'), ('No follow-up visit', 'No follow-up visit'), ('No follow-up visit(Foreigner)', 'No follow-up visit(Foreigner)'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Prev_Test_Pos', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Prev_Test_Pos_Date', models.CharField(blank=True, default='', max_length=100)),
                ('Result_Test_Cure_Initial', models.CharField(choices=[('', ''), ('Positive', 'Positive'), ('Negative', 'Negative'), ('No TOC Performed', 'No TOC Performed'), ('No Answer', 'No Answer'), ('N/A', 'N/A')], default='', max_length=100)),
                ('Result_Test_Cure_Followup', models.CharField(choices=[('', ''), ('Positive', 'Positive'), ('Negative', 'Negative'), ('No TOC Performed', 'No TOC Performed'), ('No Answer', 'No Answer'), ('N/A', 'N/A')], default='', max_length=100)),
                ('NoTOC_Other_Test', models.CharField(blank=True, default='n/a', max_length=100)),
                ('NoTOC_DatePerformed', models.DateField(blank=True, null=True)),
                ('NoTOC_Result_of_Test', models.CharField(blank=True, max_length=100)),
                ('Patient_Compliance_Antibiotics', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('OtherDrugs_Specify', models.CharField(blank=True, max_length=100)),
                ('OtherDrugs_Dosage', models.CharField(blank=True, max_length=100)),
                ('OtherDrugs_Route', models.CharField(choices=[('', ''), ('Oral', 'Oral'), ('Injectable(IV/IM)', 'Injectable(IV/IM)'), ('Dermal', 'Dermal'), ('Suppository', 'Suppository'), ('No Answer', 'No Answer'), ('N/A', 'N/A')], default='', max_length=100)),
                ('OtherDrugs_Duration', models.CharField(blank=True, max_length=100)),
                ('Gonorrhea_Treatment', models.CharField(choices=[('', ''), ('Medications Prescribed and Provided by Clinic', 'Medications Prescribed and Provided by Clinic'), ('Prescribed Medications Only', 'Prescribed Medications Only'), ('Referred to physician', 'Referred to physician'), ('None given', 'None given'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Treatment_Outcome', models.CharField(choices=[('', ''), ('Treatment Completed', 'Treatment Completed'), ('Partial Treatment Completed', 'Partial Treatment Completed'), ('No Treatment-patient refused', 'No Treatment-patient refused'), ('No Treatment-patient didnt come back', 'No Treatment-patient didnt come back'), ('No Answer', 'No Answer')], default='', max_length=100)),
                ('Primary_Antibiotic', models.CharField(choices=[('None', 'None'), ('CRO IM 250mg', 'Ceftriaxone IM 250mg'), ('CRO IM 500mg', 'Ceftriaxone IM 500mg'), ('CRO IM 1g', 'Ceftriaxone IM 1g'), ('CFM PO 400mg', 'Cefixime PO 400mg'), ('CFM PO 800mg', 'Cefixime PO 800mg'), ('AZM PO 1g', 'Azithromycin PO 1g'), ('AZM PO 2g', 'Azithromycin PO 2g'), ('Other', 'Other'), ('Unknown', 'Unknown')], default='None', max_length=100)),
                ('Primary_Abx_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Secondary_Antibiotic', models.CharField(choices=[('None', 'None'), ('AZM PO 1g', 'Azithromycin PO 1g'), ('AZM PO 2g', 'Azithromycin PO 2g'), ('DOX PO 100mg', 'Doxycycline PO 100mg'), ('TCY PO 500mg', 'Tetracycline PO 500mg'), ('Other', 'Other'), ('Unknown', 'Unknown')], default='None', max_length=100)),
                ('Secondary_Abx_Other', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Notes', models.TextField(blank=True, max_length=255)),
                ('Clinic_Staff', models.CharField(blank=True, default='', max_length=100)),
                ('Requesting_Physician', models.CharField(blank=True, default='', max_length=100)),
                ('Telephone_Number', models.CharField(blank=True, default='', max_length=100)),
                ('Email_Address', models.EmailField(blank=True, max_length=100, null=True, validators=[django.core.validators.EmailValidator()])),
                ('Date_Accomplished_Clinic', models.DateField(blank=True, null=True)),
                ('Date_Requested_Clinic', models.DateField(blank=True, null=True)),
                ('Date_Specimen_Collection', models.DateField(blank=True, null=True)),
                ('Specimen_Code', models.CharField(blank=True, max_length=5, null=True)),
                ('Specimen_Type', models.CharField(choices=[('n/a', 'n/a'), ('Genital Male Urethral', 'Genital Male Urethral'), ('Female Cervical', 'Female Cervical'), ('Pharynx', 'Pharynx'), ('Rectum', 'Rectum'), ('Other', 'Other')], default='Genital Male Urethral', max_length=100)),
                ('Specimen_Quality', models.CharField(choices=[('', ''), ('Acceptable', 'Acceptable'), ('Contaminated', 'Contaminated'), ('Non-viable', 'Non-viable'), ('Improperly Transported', 'Improperly Transported'), ('N/A', 'N/A')], default='', max_length=100)),
                ('Date_Of_Gram_Stain', models.DateField(blank=True, null=True)),
                ('Diagnosis_At_This_Visit', models.CharField(choices=[('', ''), ('Susp gonococcal urethritis', 'Suspected gonococcal urethritis'), ('Susp non-gonococcal urethritis', 'Suspected non-gonococcal urethritis'), ('Other', 'Other'), ('Unknown', 'Unknown')], default='', max_length=100)),
                ('Gram_Neg_Intracellular', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='n/a', max_length=100)),
                ('Gram_Neg_Extracellular', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='n/a', max_length=100)),
                ('Gs_Presence_Of_Pus_Cells', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Presence_GN_Intracellular', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Presence_GN_Extracellular', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('GS_Pus_Cells', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='n/a', max_length=100)),
                ('Epithelial_Cells', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='n/a', max_length=100)),
                ('GS_Date_Released', models.DateField(blank=True, null=True)),
                ('GS_Others', models.CharField(blank=True, default='', max_length=255)),
                ('GS_Other_sp', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='', max_length=100)),
                ('GS_Others2', models.CharField(blank=True, default='', max_length=255)),
                ('GS_Other_sp2', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='', max_length=100)),
                ('GS_Others3', models.CharField(blank=True, default='', max_length=255)),
                ('GS_Other_sp3', models.CharField(choices=[('', ''), ('n/a', 'n/a'), ('Negative', 'Negative'), ('Rare', 'Rare'), ('1+', '1+'), ('2+', '2+'), ('3+', '3+'), ('4+', '4+')], default='', max_length=100)),
                ('GS_Negative', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], max_length=100)),
                ('Gs_Gram_neg_diplococcus', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Gs_NoGram_neg_diplococcus', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Gs_Not_performed', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Date_Received_in_lab', models.DateField(blank=True, null=True)),
                ('Positive_Culture_Date', models.DateField(blank=True, null=True)),
                ('Culture_Result', models.CharField(choices=[('n/a', 'n/a'), ('Positive', 'Positive'), ('Negative', 'Negative')], default='n/a', max_length=100)),
                ('Growth', models.CharField(blank=True, max_length=100)),
                ('Growth_span', models.CharField(blank=True, max_length=255)),
                ('Growth_span_other', models.CharField(blank=True, max_length=255)),
                ('Species_Identification', models.CharField(choices=[('n/a', 'n/a'), ('Neisseria gonorrhoeae', 'Neisseria gonorrhoeae'), ('No Neisseria gonorrhoeae isolated', 'No Neisseria gonorrhoeae isolated'), ('Other', 'Other')], default='n/a', max_length=100)),
                ('Other_species_ID', models.CharField(blank=True, default='n/a', max_length=100)),
                ('Specimen_Quality_Cs', models.CharField(choices=[('', ''), ('Acceptable', 'Acceptable'), ('Contaminated', 'Contaminated'), ('Non-viable', 'Non-viable'), ('Improperly Transported', 'Improperly Transported'), ('N/A', 'N/A')], default='n/a', max_length=100)),
                ('Susceptibility_Testing_Date', models.DateField(blank=True, null=True)),
                ('Retested_Mic', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='', max_length=100)),
                ('Confirmation_Ast_Date', models.DateField(blank=True, null=True)),
                ('NAAT_ng', models.CharField(choices=[('n/a', 'n/a'), ('NG Detected', 'NG Detected'), ('NG non Detected', 'NG non Detected'), ('Invalid', 'Invalid'), ('NAAT not performed', 'NG not performed')], default='n/a', max_length=100)),
                ('NAAT_chl', models.CharField(choices=[('n/a', 'n/a'), ('Chlamydia Detected', 'Chlamydia Detected'), ('Chlamydia non Detected', 'Chlamydia non Detected'), ('Invalid', 'Invalid'), ('NAAT not performed', 'NG not performed')], default='n/a', max_length=100)),
                ('Beta_Lactamase', models.CharField(choices=[('n/a', 'n/a'), ('Positive', '+'), ('Negative', '-'), ('No Answer', 'NA'), ('Not Tested', 'NT')], default='n/a', max_length=100)),
                ('PPng', models.CharField(choices=[('n/a', 'n/a'), ('Positive', '+'), ('Negative', '-'), ('No Answer', 'NA'), ('Not Tested', 'NT')], default='n/a', max_length=100)),
                ('TRng', models.CharField(choices=[('n/a', 'n/a'), ('Positive', '+'), ('Negative', '-'), ('No Answer', 'NA'), ('Not Tested', 'NT')], default='n/a', max_length=100)),
                ('Date_Released', models.DateField(blank=True, null=True)),
                ('For_possible_WGS', models.CharField(choices=[('', ''), ('Yes', 'Yes'), ('No', 'No'), ('No Answer', 'No Answer'), ('n/a', 'n/a')], default='n/a', max_length=101)),
                ('Date_stocked', models.DateField(blank=True, null=True)),
                ('Location', models.CharField(blank=True, max_length=103)),
                ('abx_code', models.CharField(blank=True, max_length=25)),
                ('Laboratory_Staff', models.CharField(blank=True, max_length=100, null=True)),
                ('Date_Accomplished_ARSP', models.DateField(blank=True, null=True)),
                ('ars_notes', models.TextField(blank=True, max_length=255, null=True)),
                ('ars_contact', models.CharField(blank=True, max_length=27, null=True)),
                ('ars_email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()])),
                ('ars_license', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('ars_designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('Validator_Pers', models.CharField(blank=True, max_length=100, null=True)),
                ('Date_Validated_ARSP', models.DateField(blank=True, null=True)),
                ('val_contact', models.CharField(blank=True, max_length=27, null=True)),
                ('val_email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()])),
                ('val_license', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('val_designation', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/locations/')),
            ],
            options={
                'db_table': 'LocationUpload',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincename', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecimenTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Specimen_name', models.CharField(blank=True, max_length=100, null=True)),
                ('Specimen_code', models.CharField(blank=True, max_length=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AntibioticEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ab_EgaspId', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Antibiotic', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Abx_code', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Abx', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Disk_value', models.IntegerField(blank=True, null=True)),
                ('ab_Disk_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_MIC_operand', models.CharField(blank=True, default='', max_length=4, null=True)),
                ('ab_MIC_value', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('ab_MIC_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_AlertMIC', models.BooleanField(default=False)),
                ('ab_Alert_val', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('ab_Retest_Antibiotic', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Retest_Abx_code', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Retest_Abx', models.CharField(blank=True, max_length=100, null=True)),
                ('ab_Retest_DiskValue', models.IntegerField(blank=True, null=True)),
                ('ab_Retest_Disk_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_Retest_MIC_operand', models.CharField(blank=True, default='', max_length=4, null=True)),
                ('ab_Retest_MICValue', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('ab_Retest_MIC_RIS', models.CharField(blank=True, max_length=4)),
                ('ab_Retest_AlertMIC', models.BooleanField(default=False)),
                ('ab_Retest_Alert_val', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('ab_R_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_I_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_SDD_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_S_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_R_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_I_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_SDD_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_Ret_S_breakpoint', models.CharField(blank=True, max_length=10, null=True)),
                ('ab_breakpoints_id', models.ManyToManyField(max_length=6, to='home.breakpointstable')),
                ('ab_idNumber_egasp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='antibiotic_entries', to='home.egasp_data')),
            ],
            options={
                'db_table': 'AntibioticEntry',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cityname', models.CharField(max_length=100)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='home.province')),
            ],
        ),
    ]
